// Elliptic curve point operations
#include "ecpt.cpp"
#include "misc.cpp"

#include <iostream>
#include <iomanip>
using namespace std;

/*
 * Mask a random number to produce a compatible scalar for multiplication
 */

void ec_mask_scalar(u64 k[4]) {
	// Prime order of the curve = q, word-mapped:
	// 0x0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA6261414C0DC87D3CE9B68E3B09E01A5
	//   (      3       )(       2      )(       1      )(       0      )

	// Clear high 5 bits
	// Clears one extra bit to simplify key generation
	k[3] &= 0x07FFFFFFFFFFFFFFULL;

	// Largest value after filtering:
	// 0x07FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	//   (      3       )(       2      )(       1      )(       0      )
}

/*
 * GLV-SAC Scalar Recoding Algorithm for m=2 [1]
 *
 * Returns low bit of 'a'.
 */

static u32 ec_recode_scalars_2(ufp &a, ufp &b, const int len) {
	u32 lsb = ((u32)a.i[0] & 1) ^ 1;
	a.w -= lsb;
	a.w >>= 1;
	a.w |= (u128)1 << (len - 1);

	const u128 an = ~a.w;
	u128 mask = 1;
	for (int ii = 1; ii < len; ++ii) {
		const u128 anmask = an & mask;
		b.w += (b.w & anmask) << 1;
		mask <<= 1;
	}

	return lsb;
}

/*
 * GLV-SAC Scalar Recoding Algorithm for m=4 [1]
 *
 * Returns low bit of 'a'.
 */

static u32 ec_recode_scalars_4(ufp &a, ufp &b, ufp &c, ufp &d, const int len) {
	u32 lsb = ((u32)a.i[0] & 1) ^ 1;
	a.w -= lsb;
	a.w >>= 1;
	a.w |= (u128)1 << (len - 1);

	const u128 an = ~a.w;
	u128 mask = 1;
	for (int ii = 1; ii < len; ++ii) {
		const u128 anmask = an & mask;
		b.w += (b.w & anmask) << 1;
		c.w += (c.w & anmask) << 1;
		d.w += (d.w & anmask) << 1;
		mask <<= 1;
	}

	return lsb;
}


//// Constant-time Point Multiplication

/*
 * Precomputed table generation
 *
 * Using GLV-SAC Precomputation with m=2 [1], assuming window size of 2 bits
 *
 * Window of 2 bits table selection:
 *
 * aa bb -> evaluated (unsigned table index), sign
 * 00 00    -3a + 0b (0)-
 * 00 01    -3a - 1b (1)-
 * 00 10    -3a - 2b (2)-
 * 00 11    -3a - 3b (3)-
 * 01 00    -1a + 0b (4)-
 * 01 01    -1a + 1b (5)-
 * 01 10    -1a - 2b (6)-
 * 01 11    -1a - 1b (7)-
 * 10 00    1a + 0b (4)+
 * 10 01    1a - 1b (5)+
 * 10 10    1a + 2b (6)+
 * 10 11    1a + 1b (7)+
 * 11 00    3a + 0b (0)+
 * 11 01    3a + 1b (1)+
 * 11 10    3a + 2b (2)+
 * 11 11    3a + 3b (3)+
 *
 * Table index is simply = (a0 ^ a1) || b1 || b0
 *
 * The differences above from [1] seem to improve the efficiency of evaulation
 * and they make the code easier to analyze.
 */

static void ec_gen_table_2(const ecpt &a, const ecpt &b, ecpt TABLE[8]) {
	ecpt bn;
	ec_neg(b, bn);

	// P[4] = a
	ec_set(a, TABLE[4]);

	// P[5] = a - b
	ufe t2b;
	ec_add(a, bn, TABLE[5], true, true, true, t2b);

	// P[7] = a + b
	ec_add(a, b, TABLE[7], true, true, true, t2b);

	// P[6] = a + 2b
	ec_add(TABLE[7], b, TABLE[6], true, true, true, t2b);

	ecpt a2;
	ec_dbl(a, a2, true, t2b);

	// P[0] = 3a
	ec_add(a2, a, TABLE[0], true, false, true, t2b);

	// P[1] = 3a + b
	ec_add(TABLE[0], b, TABLE[1], true, true, true, t2b);

	// P[2] = 3a + 2b
	ec_add(TABLE[1], b, TABLE[2], true, true, true, t2b);

	// P[3] = 3a + 3b
	ec_add(TABLE[2], b, TABLE[3], true, true, true, t2b);
}

/*
 * Table index is simply = (a0 ^ a1) || b1 || b0
 */

static CAT_INLINE void ec_table_select_2(const ecpt *table, const ufp &a, const ufp &b, const int index, ecpt &r) {
	u32 bits = (u32)(a.w >> index);
	u32 k = ((bits ^ (bits >> 1)) & 1) << 2;
	k |= (u32)(b.w >> index) & 3;

	ec_zero(r);

	for (int ii = 0; ii < 8; ++ii) {
		// Generate a mask that is -1 if ii == index, else 0
		const u128 mask = ec_gen_mask(ii, k);

		// Add in the masked table entry
		ec_xor_mask(table[ii], mask, r);
	}

	ec_cond_neg(((bits >> 1) & 1) ^ 1, r);
}

/*
 * Multiplication by variable base point
 *
 * Preconditions:
 * 	0 < k < q
 *
 * Multiplies the point by k * 4 and stores the result in R
 */

// R = k*4*P
void ec_mul(const u64 k[4], const ecpt_affine &P0, ecpt_affine &R) {
	// Decompose scalar into subscalars
	ufp a, b;
	s32 asign, bsign;
	gls_decompose(k, asign, a, bsign, b);

	// Q = endomorphism of P
	ecpt_affine Qa;
	gls_morph(P0.x, P0.y, Qa.x, Qa.y);
	ecpt Q;
	ec_expand(Qa, Q);
	ec_cond_neg(bsign, Q);

	// Set base point signs
	ecpt P;
	ec_expand(P0, P);
	ec_cond_neg(asign, P);

	// Precompute multiplication table
	ecpt table[8];
	ec_gen_table_2(P, Q, table);

	// Recode subscalars
	u32 recode_bit = ec_recode_scalars_2(a, b, 128);

	// Initialize working point
	ecpt X;
	ec_table_select_2(table, a, b, 126, X);

	ufe t2b;
	for (int ii = 124; ii >= 0; ii -= 2) {
		ecpt T;
		ec_table_select_2(table, a, b, ii, T);

		ec_dbl(X, X, false, t2b);
		ec_dbl(X, X, false, t2b);
		ec_add(X, T, X, false, false, false, t2b);
	}

	// If bit == 1, X <- X + P (inverted logic from [1])
	ec_cond_add(recode_bit, X, P, X, true, false, t2b);

	// Multiply by 4 to avoid small subgroup attack
	ec_dbl(X, X, false, t2b);
	ec_dbl(X, X, false, t2b);

	// Compute affine coordinates in R
	ec_affine(X, R);
}

/*
 * Multiplication by generator base point
 */

static const u64 PRECOMP_TABLE_0[] = {
0xfULL, 0x0ULL, 0x0ULL, 0x0ULL,
0x36d073dade2014abULL, 0x7869c919dd649b4cULL, 0xdd9869fe923191b0ULL, 0x6e848b46758ba443ULL,
0xe692c2b52108689ULL, 0x29b1db37cf0df068ULL, 0x81b333cd2ec495dfULL, 0x2f866bf8ceb54fccULL,
0xed33e9d7b8cfb7f4ULL, 0x77be0cb0857980c4ULL, 0x73621b5857122ccdULL, 0x704a4bc8a79fd8b2ULL,
0x79e4e13c64a01e42ULL, 0x22d804171cf98ef1ULL, 0x28ae8217fb37d6ddULL, 0x2aa9137894096adeULL,
0xa12a7c195bccc055ULL, 0x60327de2d40e4d4cULL, 0x4d463cba7511e06ULL, 0x1af8959535cd0362ULL,
0x29e3aa9143bc1149ULL, 0x713965bea15c4f5bULL, 0xeb4a60a973865558ULL, 0x7762bd993319d66aULL,
0x41cd4eceaa0d0da8ULL, 0x733689b6aee3528bULL, 0x8bd8c3141f568387ULL, 0x1516b2ba94ebd332ULL,
0x63c514febb2d96dfULL, 0x218972a352400134ULL, 0x9dda12f63e3038aaULL, 0x66c63ac9c140acf2ULL,
0xb810067978c37089ULL, 0x2db36d30438e013dULL, 0x4eb3d98b82f4e828ULL, 0x101267a0e0b4597ULL,
0xe73c64dd9dce1560ULL, 0x70140cb6949f6d25ULL, 0x3d51ec7c1f1a0b77ULL, 0x2e6f36168b557585ULL,
0xddf30c5bc8767e6dULL, 0x2e35bc82a1367d92ULL, 0x2bbbb168f7bee97fULL, 0x542cb4eeb0bce77fULL,
0xa7cb9837642326d1ULL, 0x16dc1d224e2b84c8ULL, 0x76f7e18370ad322ULL, 0x1ce58585c5dbad67ULL,
0xd87a29f07eae34b0ULL, 0x417d7d06daae20afULL, 0x7933be8ba4020c46ULL, 0x511c3a2d5a28e0aULL,
0x638170ef259da988ULL, 0x5bbac242c4583b35ULL, 0xa2abdd183a3c195aULL, 0x72bc3b185027c130ULL,
0xf261b4c10931ff95ULL, 0xb52ae0632cf5a57ULL, 0xe170c99fe22a4f6bULL, 0x4aba1faf1c816acdULL,
0x5eaad107f9e358beULL, 0x77b2d4a60db4260cULL, 0xb53790ec441e8edcULL, 0x2c0bf86097e287d2ULL,
0xe881cc00ebcf9c0ULL, 0x4751a9131ff5c6e1ULL, 0x8485ba0f638daf7bULL, 0x7e600f67a2566517ULL,
0x6c3498f39756606aULL, 0x2b1c7d0fac019c98ULL, 0x43eebe827bb163a6ULL, 0x57e94fb4f3a3eb5aULL,
0xe58349c9ba104ecULL, 0x2199b74f4e6f315bULL, 0x9e6363e941229c88ULL, 0x2eaef58807c3eb2cULL,
0xf2934b1549f03c4aULL, 0x694c49d8062ada4fULL, 0xa73a37f92b014459ULL, 0x5dd01b27f8002943ULL,
0xc65defded541ec91ULL, 0x1c22ff7825a64c97ULL, 0x52ef08df835147abULL, 0x4c6024f28a176b5fULL,
0xb91732c5f37a8b22ULL, 0x5baba2f3ec3f4d7eULL, 0xbe23511b5f265fdfULL, 0x37bbf6921f553b16ULL,
0x49f5740fac11b32bULL, 0x61dbddb3fe57f683ULL, 0xa814e93b287f7cc2ULL, 0x258c063807c85377ULL,
0x30f55d8e3d94bd7eULL, 0x3b87d935125f0fa3ULL, 0x930aebe79cc81956ULL, 0x621df22a74fac617ULL,
0x3eccaef5ba7dbab8ULL, 0x494517814b8073b5ULL, 0xb0447e592b1e5202ULL, 0x6bcb37791046ce10ULL,
0x2be8e9fd50a42224ULL, 0x6996f9db6cd065b1ULL, 0xc386ac61bca15e3fULL, 0x48b9efce0202e328ULL,
0x80c10f28e75c2871ULL, 0x76994c74b2639ce3ULL, 0xde07c0e82f2c17a7ULL, 0x19149653b7311706ULL,
0x1d30252e26d4134cULL, 0x1bd243b921953723ULL, 0xa099ff71e9e34897ULL, 0x70983a37615f90d0ULL,
0xee87840f22c8b68fULL, 0x96c7e80297bebf3ULL, 0x2f6855ed63f557ccULL, 0x4da4d2f761153048ULL,
0x399d816c2e082be5ULL, 0x4ec14f9b72eb3a4eULL, 0xeb951c5a672313e7ULL, 0x41bd029fd2b56d6eULL,
0x94a44ad8febbfd4cULL, 0x58437e7dc9ead019ULL, 0x88e7827a66cd9513ULL, 0x496cbe2c640fe578ULL,
0x50aa74cc8ae93118ULL, 0x73d4bf8aeb440efcULL, 0xbea7c962be371d0ULL, 0x2884b2e59dac0899ULL,
0xe8d5352bf53dedb6ULL, 0x24ae13d6fd2c22d9ULL, 0xa89aa05c55de69f3ULL, 0x8fe82c072dd4e67ULL,
0x3191010895c6be96ULL, 0x311a47355bac5c7eULL, 0x3472d3bb023b3c2bULL, 0x2599527b1275748dULL,
0x601cf96330cd6a25ULL, 0x70981e92610b61d0ULL, 0x6a47abcdbfb3b5caULL, 0x755b7d5eb445ee1bULL,
0x3c8d4e871770d6eeULL, 0x6d46d0eea417355ULL, 0x53e823a0f7ff1484ULL, 0x470642ea232463a6ULL,
0x72a175ab41831a7cULL, 0x31395f627a8b27c1ULL, 0x6c7d1a2c09702db1ULL, 0x79fab6f1474aaf47ULL,
0x3b1a58ff0922aff3ULL, 0x4f0a25074400cef4ULL, 0x8a8ee482d04055a5ULL, 0x49cda7f84c57166ULL,
0xfa5a9155dffeb757ULL, 0x363067500a4f84eeULL, 0x5447c2a78172c167ULL, 0x7c102c86f29164a6ULL,
0x8ceda0c1786a3e15ULL, 0x1891b247d096db4ULL, 0xcc5ce4be544a1960ULL, 0x7176086423552376ULL,
0x19f8055f631df57cULL, 0x20e073de066f9894ULL, 0x76c71d20632f2562ULL, 0x1aa41f4d0664cab9ULL,
0x2be06a00d326bb1fULL, 0x3e47da7957832c24ULL, 0x918e3f5a7b36ed79ULL, 0x242106dd9ca01031ULL,
0x18a0697d42afd536ULL, 0x11f33fdd622714c2ULL, 0xb1d7be810c06bed7ULL, 0x7b9cc40626457058ULL,
0x3da028baeb632baeULL, 0x3de075d3105d8285ULL, 0x9aecb8d882b40092ULL, 0x73175b6a8357ad0eULL,
0xcedb306d65f0be19ULL, 0x128efb20b310967aULL, 0x3d629fd265c50970ULL, 0x78e82c99bcc37ebcULL,
0x5bd73bb3f57cf051ULL, 0x32cba8a9eb098243ULL, 0x7bb072abb066a2d5ULL, 0xf221220013e8e14ULL,
0x2fcdce462f930795ULL, 0x402c9d364043be20ULL, 0x45ecf791782d2acaULL, 0x202904d26441eb30ULL,
0x32e3f7a1be59b95dULL, 0x4de0cd47b63960b2ULL, 0x1324d540401ee759ULL, 0x195f5e3e2ff65a8ULL,
0xa9533dde52f503d2ULL, 0x6c0fd23d14ce520cULL, 0xdaecab86a0a008adULL, 0x1b0a22e40819cfebULL,
0x6ee5e9988fbb95b5ULL, 0x6ef95f18b20f19d7ULL, 0x1f2c22e8a3f08953ULL, 0x6c90ca047d1811c5ULL,
0x8537610fc2fcb9a0ULL, 0x6c1fdd548c4c93d1ULL, 0xda06b44b53bdc79aULL, 0x645929f91d3cc07eULL,
0x82c99f77a1381b4ULL, 0x6405c786adf01d82ULL, 0xcb5969eacd3558c3ULL, 0x2132f36ecf5d64efULL,
0x46cc872e464fda06ULL, 0x236a92bba26eff9aULL, 0x3c293cb0606dc04eULL, 0x41716fec61af1c29ULL,
0x2dc4670ba4e564e4ULL, 0x2153ab5c05bf5cbULL, 0x4eb260a192a68ad6ULL, 0x4549608d42f230dfULL,
0x8e61a754985402d0ULL, 0x69cf45006e98860aULL, 0x601f108e9632a4bcULL, 0xaa73604993a0731ULL,
0x7ef954d84705d87cULL, 0x6fd19ddaa16f1375ULL, 0xa398968b090f7fb6ULL, 0x4a3e1908269f4735ULL,
0xe916703f6fdd6ccaULL, 0x60bac745a363f431ULL, 0x9c5a003699a1153ULL, 0x7c64904469d3ee4cULL,
0x96c9f2f6bd228058ULL, 0xd8dc5deb258664dULL, 0x362fa8a4fda8091bULL, 0x6022b605e799330dULL,
0x1558ea9c651231d0ULL, 0x2adc35c359863ae7ULL, 0xd7784bf9de06d2c9ULL, 0x2c45edc058c6c07cULL,
0x2a272f140cf6a039ULL, 0x6cf5567783b932bdULL, 0xb366286876763a09ULL, 0x1ed3fb5745b102a7ULL,
0x39bfa0406ec1d258ULL, 0x5340f69d79366580ULL, 0xb16e1482f5239340ULL, 0x6f7a614a5861efb1ULL,
0x8a873fdb7081d704ULL, 0x25011a5393ef5052ULL, 0x2b8ed62a09412261ULL, 0xa511bd753027e4dULL,
0x6ffb58e77b1a075bULL, 0x1a0997c83a30f3e2ULL, 0xfac380fbdf73ec1bULL, 0x5347439c7e936e10ULL,
0x69c17ab675db020dULL, 0x5af4805f99a172daULL, 0x6e6ea3b002befd41ULL, 0x2122d08c68606296ULL,
0x934501006dd12750ULL, 0x1998299f076df9a1ULL, 0x92a3c5b9b07319bdULL, 0x6e1da08c14284de4ULL,
0x46896b4b00abb531ULL, 0x350d6776c51932a9ULL, 0xabb0e649510ec69cULL, 0x27d59f94a1013afcULL,
0x9d9efedec634ba37ULL, 0x78c2d703a4b55c48ULL, 0x54f79179cccfb0b5ULL, 0x1f49f591c2c63785ULL,
0xc83f76814420a8a9ULL, 0x34613ff8436bffe5ULL, 0x3ee8f858a065ac74ULL, 0x3474de16e38f3ac3ULL,
0xad640e4bc9ade2aULL, 0x443a14c5568b66e5ULL, 0xe016f7c12189001aULL, 0x4d71fa65db967e48ULL,
0x2840420705bfa45eULL, 0xa0cc8cf1645138fULL, 0x51f631c9928753e4ULL, 0x5dad8874f340c7acULL,
0x7115aee0861b37dcULL, 0x65783a8443495b0cULL, 0x3e03cd00994c9129ULL, 0x202b0bacba8ac5acULL,
0x40dce2cfa0d1ca2cULL, 0x1bd9b233ae2fb858ULL, 0x309156b972266e96ULL, 0x66a0e17e938789d5ULL,
0x87cf9baf62880e94ULL, 0x114e5f0f1fe1b829ULL, 0x609c915831c3c07aULL, 0x1b21919950fd249aULL,
0xda758fbf680f83e3ULL, 0xb3a08e40a24b8c2ULL, 0xdd777684f4383b02ULL, 0x47bac7465e9ceaf7ULL,
0xd0db3ac726a1fc64ULL, 0x2b9aeed793a7c10eULL, 0xb22613cb6d9df6c9ULL, 0x1886dc74df384dULL,
0x3e91c34d7aa57aeaULL, 0x69d9bdaaf993aedbULL, 0x8422a4f24d9bb9daULL, 0x2410c1750863bedULL,
0xe30c350602f96d88ULL, 0x74ae58c3c571d036ULL, 0x197b09b142846429ULL, 0x463dd9816c666996ULL,
0xd3d4ce26fe9337c9ULL, 0x78748a39dbdd968cULL, 0x68f8765c9312987dULL, 0x170635739f8e35f7ULL,
0x69202261cff9aff4ULL, 0x189d2b7acb168047ULL, 0xa484de22faba45dbULL, 0xd75bf94230b2b2fULL,
0x112af14864ea5a27ULL, 0x779d50a67c9c72ffULL, 0x26313c47d178df80ULL, 0x4d659bb726593146ULL,
0xbf1c32db7cfa7a2cULL, 0x79397fe8ccdd49fdULL, 0xc4ba634f14ee2c1cULL, 0x4db880a7c6752efbULL,
0xc2a7df12c7b9f8f9ULL, 0x5278bccf4dbfaa52ULL, 0x4062efe069b7efe8ULL, 0x3f4387f9e049b11bULL,
0xb1e2392f05b688b1ULL, 0x1cd8b2428921af0fULL, 0xf8b51ef15c8cd5e6ULL, 0x143a4275e683d1baULL,
0xe98ea99ee13fcf6dULL, 0x6d567f2a1887e8baULL, 0x4143e2e109d13320ULL, 0x626c20c162702c91ULL,
0x68967c0cdae4aca1ULL, 0x5bd98faed4ecc0bdULL, 0x97d47540514d24e6ULL, 0x7e6b9d24fafe80f8ULL,
0xf5bff5a891ede735ULL, 0x600dbbf318966aa8ULL, 0x62a13cb7c782c7eeULL, 0x396c66e698820d80ULL,
0x9d897d208ab10349ULL, 0x5989e13a92dd696bULL, 0xf1ce1c7713bee7f9ULL, 0x509b0ad491c31784ULL,
0xfa2d57c00f140aefULL, 0x6c71549ad4f91cf9ULL, 0xff9cd3b801351c82ULL, 0x2a46f6a7e42b835ULL,
0x4047df78b8b7dc5eULL, 0x6d163e3ae85a22a1ULL, 0x90fd2f56f0330665ULL, 0x1ac33a648bffd5e8ULL,
0xa572edcc658e01e0ULL, 0x60c3ef82559cc2d6ULL, 0x4d07761af11c66b0ULL, 0x70113bfb53d7e291ULL,
0xe4a79aee160f24dfULL, 0x1de9a052171c5fdULL, 0x49ad4d9775bba82fULL, 0x5fa25a756df35a26ULL,
0x7aaf1d4392b93f28ULL, 0x766f697bd1e055d1ULL, 0x66279bd01ef815ecULL, 0x72213eb562d07af3ULL,
0xda01c15067aa3166ULL, 0x7753ad7c1b5254d3ULL, 0x4632802573117ceaULL, 0x6c32c3d056988ff7ULL,
0x6c0b502a27f9317aULL, 0x26a5d817f2ac2859ULL, 0x88db19c4c2575c17ULL, 0x6160ad345ce1911dULL,
0x4b616f28ef1acdebULL, 0x346566f4b1f23520ULL, 0xd6c12b5bd9f0d5a5ULL, 0x285236c467e1b69eULL,
0xee5022f45d8884c2ULL, 0x648187a66cee4120ULL, 0xd21b231d8f11cfe9ULL, 0x60d80627a007e5dfULL,
0xa5fed209cf08a3ffULL, 0x734afb90aecebd0fULL, 0x72d10ba167f13809ULL, 0x323904255b4ecbdaULL,
0x1b1ab20ba2aa5309ULL, 0x16e5cb7b70bd6b15ULL, 0x9d49dbbf898068daULL, 0x610e7f28d5c8773dULL,
0xbd2ac30cb0e05179ULL, 0x4903b9dbbe2f7bddULL, 0xb82d06dc7d78430aULL, 0x531d540c811dcde5ULL,
0x9b63650c014103ULL, 0x2825fdb792f4b3c3ULL, 0xb9111d805ffd66f7ULL, 0x180f5016eff97ab6ULL,
0xf597e6e466abc784ULL, 0x2e5e8507e1bd4fa7ULL, 0x19a5c489e0182e26ULL, 0x63f2c26ce5a72e40ULL,
0xa5dc9673ff9a79c0ULL, 0x7f8255bf092ef306ULL, 0x7e155d2866cd6a89ULL, 0x32f4488cee7cc92bULL,
0x45abdc745e099457ULL, 0x48330ed29d5fb570ULL, 0x2127414334b981d3ULL, 0x73520059f7930049ULL,
0x19772b40e5d25214ULL, 0x6df2fc1900010d6eULL, 0xd3175b2943ea940fULL, 0x5159c01c16002f1ULL,
0xb153e0fde9c68466ULL, 0x37316c19540738b4ULL, 0x17c7a66da0e63fa9ULL, 0x4454853e29968806ULL,
0x23ca0c21fcf80990ULL, 0x5a2fefc1b1a6e898ULL, 0xd8a24d5cdc997be6ULL, 0x46f64a09ee78ecb1ULL,
0x36fe3f977d44f733ULL, 0x124a9da2ee5690e8ULL, 0x65328938364d2f6bULL, 0x160fbe5355822e7aULL,
0xb6f5a869b1c17b44ULL, 0x67e4de26dfe4f4e3ULL, 0xed31b78913183956ULL, 0x2c62ccbea4c7da32ULL,
0x1fd1cdeecd101730ULL, 0x2150a71f8e3a7501ULL, 0x293650ff21de4af8ULL, 0x6cc03c682d16ce87ULL,
0x81459452abcc3bf1ULL, 0x587b97f214fb22d1ULL, 0x260d195ede9a0a54ULL, 0x3364f6b106b7dd6bULL,
0xa88ad6435d617f44ULL, 0x2355f9fb9632479aULL, 0x1845dc57f85de50dULL, 0x50fbfd2d219a27ffULL,
0x52096036ab699940ULL, 0x65c9c827c29b4287ULL, 0x190953f69b9f5eaeULL, 0x12e656eb41a2955fULL,
0x58f92f8a657e2856ULL, 0x16bd0d4f1e541580ULL, 0x735123c880e2c380ULL, 0x219d0128109313dbULL,
0xfb4cf233b3e5666cULL, 0xa2f8e51fe33ed44ULL, 0xbd24dd02788e30aaULL, 0x5eda3d73d67edcfeULL,
0x9a6b72bbd5306c25ULL, 0x168be5ec834be619ULL, 0x522dd529d605c494ULL, 0x25500f1b353fc0ULL,
0x24adfba3cb9f1b3cULL, 0x2be2ba5b13e9888dULL, 0xefc0e10e4824adc5ULL, 0x70878fa33bcb59cdULL,
0xbcba9087016c1bc3ULL, 0x5b41c03d1e31f40fULL, 0xecf78c5c7639ef25ULL, 0x7c3c2dd2d495fc92ULL,
0xa651602fdb2903a1ULL, 0x61522d4b51ea963bULL, 0x2475a95eaf7f2847ULL, 0x6e0e858004c8a02ULL,
0xb2f475ff25e03693ULL, 0x7bb563e250534b27ULL, 0x26c7385856bf5eccULL, 0x134fd9925eca85b8ULL,
0xbf3692ff808759c1ULL, 0x1c155eec26e55d58ULL, 0x55cf25b67d184e6aULL, 0x3abd66502df1c2f2ULL,
0xcb7a4385c079c347ULL, 0x638ab02664b9ab95ULL, 0x85c5710c4228b303ULL, 0x290c4ff9d4bd3322ULL,
0x18b6d4b54ae09599ULL, 0x2c6b7df3c468c854ULL, 0xc259b6294eef466cULL, 0x612595765012eac7ULL,
0x2c9e88fd66e705eaULL, 0x59a8c6785421a523ULL, 0x33a3cf8452667f6dULL, 0x62bbc43954533cd5ULL,
0x97b5a6fc2a121de9ULL, 0x3536ce27d7b4db1eULL, 0x3508112afe64137ULL, 0x20df22ff1b4ffc79ULL,
0x7fe66d225f42baa1ULL, 0x448de6617aa69d87ULL, 0x4522e8a2edeb7848ULL, 0xef365c3437a8f9dULL,
0x7c1d9d5989844c0ULL, 0x13aec7211f384708ULL, 0x9bbc1f63aa0090c7ULL, 0x393223699758ccc2ULL,
0x81e4b763692f49b9ULL, 0x242897e57317126ULL, 0xa134b85714e43dafULL, 0x48b027b70199c4eeULL,
0xd0c546f80f494033ULL, 0x3c6bbf1949bdf71dULL, 0x99d331ac48ea6906ULL, 0x622c2b27914b8119ULL,
0xbb81a8a691120bf8ULL, 0x2c5c4163a7789161ULL, 0x89205cd4bbc6295ULL, 0x6126bfc0e8de65d8ULL,
0x5dacfb777572136fULL, 0x590f6251272b94ddULL, 0x73c8b73fb9ba96d0ULL, 0x66e952c0b81d25d7ULL,
0x551ad368e6d4f8ebULL, 0x41e20a74db18b275ULL, 0xf9f835169c12c678ULL, 0x4d02a8a7191f8a4eULL,
0xdd955e19782c7df7ULL, 0x63789edf7e8bc884ULL, 0xa0693736e09a368bULL, 0x2ca2c60d6ca962baULL,
0x1e6a8a9a4566c6e0ULL, 0x3c2695ea2b806e85ULL, 0x908b0371f92a31c7ULL, 0x33b25ff50d4c2051ULL,
0xb3ca398bffbe16afULL, 0x53c594da786302fbULL, 0x9715569a4d5763dcULL, 0x67673912ad9302fcULL,
0xcde3c285de6b305aULL, 0x4e823af06fc13538ULL, 0x728764f31665e9eaULL, 0x1adc884a00a68140ULL,
0x609b1028e2d255e7ULL, 0x78a570b42cdb656eULL, 0xb7c3e93e44d84b2bULL, 0x4b2b08e5ca5dd3cdULL,
0x4e229a522da57343ULL, 0x753de3c3b5e7d47aULL, 0xe45151ce80a64704ULL, 0x5cf92edd8d9f9b4aULL,
0x32e50326e3ecfc5aULL, 0x7606968908a00a7dULL, 0x4c8f067e97bed258ULL, 0x1a15b9f88545b8c4ULL,
0x3ea55674c3d69795ULL, 0x44993dfe83fca6e9ULL, 0x7d83ca39ada462d4ULL, 0x592dfb4a5e031de9ULL,
0xc86052c36bce3be2ULL, 0x76041c90ee2e0fcaULL, 0x7961d3cc1b77c5a8ULL, 0x15061c7febe100bcULL,
0xba6fe327f8e86d7cULL, 0x33850d3b47bd51a9ULL, 0xc00edabd4f822a3eULL, 0x456386ebfc0de0f6ULL,
0x8d9d2d0bc1daa720ULL, 0x59c73b7b0ca7afb9ULL, 0x7c730af762f03bfcULL, 0x46b6db79b8d82162ULL,
0x8b4b99091659762aULL, 0x144edc732fdcacc4ULL, 0x105cd77032658432ULL, 0x1026448d611f3d75ULL,
0x71258a4cc2331c2cULL, 0x4ef12183fb2c3cf3ULL, 0x273502ac8229624eULL, 0x2244ad3f7401cde8ULL,
0xb3edd5d9ecc83cd3ULL, 0x65d27166602f4430ULL, 0x32def6f96bfc94e7ULL, 0x481853e5447d6ed2ULL,
0x6c6b2a4d182befe1ULL, 0xae090e3a78cc6baULL, 0x7ab89549798c3055ULL, 0x4424e7fee68df44aULL,
0xa22a1dde61c4bcdaULL, 0x7f61e981dfb1e6fdULL, 0xea65364b1e26cebbULL, 0x14400f0827e32d8cULL,
0xadea183f733cca66ULL, 0x43ffacfeb7308026ULL, 0x556063a0ff9b6715ULL, 0x46360b2ccfbcbc16ULL,
0xab0c96189fe2622bULL, 0x9e539f6f0c3be24ULL, 0x71d64227529a6182ULL, 0x3f04d3a0be2c0011ULL,
0x474f64d5bc44cc1eULL, 0x48fc31c4e5c42917ULL, 0xcab4b6c5ada07f5aULL, 0x6765f3c38531329aULL,
0x1c44ce2fd9a508fcULL, 0x6a95c0fa18499970ULL, 0xc124f00a71811a70ULL, 0x37699f892e059956ULL,
0x11cf868f6b7f8342ULL, 0x558603795e3e8df2ULL, 0x6ed434ad61bf00d3ULL, 0x843221ba0ff3bb1ULL,
0x1fe49eb46a9e2418ULL, 0x11800f94ec4edd80ULL, 0x5b9bc04b00e5540dULL, 0x62456c4f033eea9ULL,
0x849652cf634c0c6aULL, 0x4af94ea80b16aeeaULL, 0x6cb82878e6facea2ULL, 0x77762f31499fdffbULL,
0x9151500eb0492b41ULL, 0x276a8d98a360fa8cULL, 0x3812384550fc1776ULL, 0x5d1f0b100e025e1eULL,
0x7fd455fe5e53427dULL, 0x6089f56c2a7de8beULL, 0x423e5d80dd74ce14ULL, 0x2797b91f1eae8633ULL,
0x6047e19df907e159ULL, 0x6854b34877c7cf3dULL, 0xa0f9ab9797525f6cULL, 0x1afaa0e17988cc8aULL,
0x3b0f698cec073832ULL, 0x63503857639b62f5ULL, 0x49c526f1872c7a58ULL, 0x132061288bedb713ULL,
0xe62725136479b2c1ULL, 0x1da6d569da9e70f4ULL, 0xb937116a7e460218ULL, 0x27712fb79f5182a1ULL,
0x1667a5d62e3b35f2ULL, 0x6944398b36d0e12fULL, 0xb00154c5de63205fULL, 0x2a2f74343febe92dULL,
0x973304ad6c01f423ULL, 0x5f5b8a1dc473b605ULL, 0xa356f5e8e64e7b0dULL, 0xbe8e6c0bdb2ce4ULL,
0x50f604d8d7c6e4d1ULL, 0x4cdcfc1f286ad550ULL, 0xda71782f6a178817ULL, 0x5e7bececb620cd3fULL,
0x23d46bd892ddaa95ULL, 0x3e18c33b88e3a5bULL, 0xd261e6ad57b5601cULL, 0x26674e7ba7b351a1ULL,
0x4ab0274412d283a0ULL, 0x71793f18b0407c96ULL, 0x36640a4cf9cc2020ULL, 0x33b032797bf64acULL,
0xddb390e1c70add33ULL, 0x4ea540a2e98bbfd0ULL, 0x8084ec31666ffe74ULL, 0x6c0b56e4767a2f4aULL,
0xebaf9d8854db2992ULL, 0x656dd17ad53830b5ULL, 0xb47d6faecf4de613ULL, 0x52067591ce164ea1ULL,
0xe9aa92b9daa7ce41ULL, 0x6913d4a8f78129e7ULL, 0xa8156d704a9a7aaULL, 0x345b7a148952142eULL,
0x51ff94e0ad4a4529ULL, 0x5cc29992004f3dd6ULL, 0xa37a2748454bae83ULL, 0x76dc68973b70a735ULL,
0x1732e867c05f4c3ULL, 0x10b02134132a54c7ULL, 0x58c998cc52df5803ULL, 0x19f2ad5efd2651adULL,
0xeac96c6272e08de5ULL, 0x78e199a16dae5264ULL, 0x6629b6f83bcc2bdeULL, 0x40b8e8785ea0b265ULL,
0xc637bdd0a19491b6ULL, 0x358130ec5a75beb6ULL, 0x285cf8d460b35f7fULL, 0x54c6d42d31d0e58cULL,
0x1f0dbcc9fa802ec7ULL, 0x39b32da4c36db104ULL, 0x91d40b161039a071ULL, 0x21da2e5011795f12ULL,
0xb6ed28be9c23f454ULL, 0x6c4bf1d81ece1de6ULL, 0xa1226e2387524be4ULL, 0x72b384a1b53413f9ULL,
0x892bde386b219d1bULL, 0x366ec0418b0a8c8bULL, 0xf3ecd71ef7c5b14dULL, 0x1881d4434fa8d568ULL,
0x13bbe301bf631c86ULL, 0x6f39fd8d0006c9f9ULL, 0xcd1d85102c69d7dfULL, 0x402b03a64c5c921eULL,
0x2ff37c5bf81676cULL, 0x4ac2ef8d1efba68ULL, 0xa8f5fc015227b1ebULL, 0x7a748c013c9d522dULL,
0xa8ed2a74b4f6e1ULL, 0x52c3eb3694981da5ULL, 0x263ca40cc6150d41ULL, 0x69d3deec48021ce9ULL,
0x8a923839122109fdULL, 0x278bcab3ddb7e2fbULL, 0xe686212f5306f798ULL, 0x6dda731055efa3c9ULL,
0x5285bbde66d3b37fULL, 0x65db550a960a3099ULL, 0x401d7ab5b96c639bULL, 0x7f72f954d21f3ea5ULL,
0x6183565ec48cf3f3ULL, 0x77628c047979444dULL, 0x615989afe0031dc9ULL, 0x6424ae2688d82aa0ULL,
0x3660641944ad8ed9ULL, 0x16dcb994e8c7cae5ULL, 0x38f10f9dbd924a6cULL, 0x7116064182a230e1ULL,
0x1b57bd3af144dbbaULL, 0x6ffe779348b58a8dULL, 0xc0bb30891bcace13ULL, 0x22b9c2f948feab67ULL,
0x8dd0b11b3a78179ULL, 0x44f5863174bd6543ULL, 0xcd36139618a7f8c2ULL, 0x48de27484afd3026ULL,
0x672f7964406a52dULL, 0x7d74ec938450a17cULL, 0x79be5066ae021a45ULL, 0x1b8335514f106762ULL,
0x36347273d066a6c4ULL, 0x729a07aa666b9bebULL, 0xcd5c9679b04a78c0ULL, 0x1871e463922f7acfULL,
0x84aae36bbdbe5382ULL, 0x2492c3380302086ULL, 0x7a2f7807924ea10cULL, 0x5f5ed39eb6684087ULL,
0xe4d6b596114994eaULL, 0x7b5d7b880cd514c1ULL, 0x759c7c738fc06e43ULL, 0x65c0cc5ba1eccc2bULL,
0xb3595896d47494beULL, 0x635d7dc1664e624fULL, 0xa307af0a338193b3ULL, 0x75f2a87e5f945e7aULL,
0x699e2ed19546484ULL, 0x3ddd5502c523b38eULL, 0x9c238a3d4699213ULL, 0x15c2d4f3288f1ac2ULL,
0x794b9fde5539fdbdULL, 0xa4c8edc5122fd8ULL, 0x584337f0f710607eULL, 0x4fbdf8fe52bbf0c6ULL,
0xbeed9782dc8484ceULL, 0x3c472eec38398e88ULL, 0xfe143f8c6216583cULL, 0xf457a23a19e8513ULL,
0x41ab2c4dc2f58383ULL, 0x4e30b2af359c2c7ULL, 0x701e766dcafd105aULL, 0x3b0801a0c3bde485ULL,
0x85c8da6e017b931fULL, 0x5232f2ae37f5de0cULL, 0x67d90613db73a5bfULL, 0x6b847a4b2317c98cULL,
0x82feac69a7cd7015ULL, 0x424b79c5585cfe26ULL, 0x7c1693460b2d0634ULL, 0x70121a6c9a7816f8ULL,
0x4b1a9e9394677651ULL, 0x5bbc81731836bce1ULL, 0xbfd55a98f807269aULL, 0x5b0dcf6c50e5616ULL,
0x3689355edaa6eefcULL, 0x433575dc39d6f3eeULL, 0x53c376fb71e6d0faULL, 0x7b75ab4dd7460312ULL,
0x5b4ae4b231bf04b8ULL, 0x5a9677f87b599ba8ULL, 0xe0326bc4fa2ca744ULL, 0x11ad8c06d5340001ULL,
0x57ce96720ace4297ULL, 0x4c1c7bad23245ce3ULL, 0x50d85ed4f867cf41ULL, 0x57d3671eab5ad319ULL,
0x7223dc981dd6b0b2ULL, 0x5d5892bdd9550776ULL, 0x74ac25392e70a059ULL, 0x2358c235433a1997ULL,
0x977add80da922cc8ULL, 0x613cedca577712a4ULL, 0x9dc42052d7a63aebULL, 0x46e7022975158bb9ULL,
0x51fd01eb7fc05d32ULL, 0x319921802c6ce600ULL, 0x8578eb315d1fecd3ULL, 0x4c0611a9e939520cULL,
0x3c19db5d8fea9e50ULL, 0x26a00f12f03a8070ULL, 0x4a0fa0f0d75dbb23ULL, 0x236528ed6438dcb8ULL,
0xf64c4a1fa82ae5feULL, 0x24bf9649017e3859ULL, 0xd2efefb6e3885fe0ULL, 0x430aaf1a36537cf9ULL,
0xefd92a7772283727ULL, 0x12f495f5c9c691dULL, 0x5b772f67c7ff429fULL, 0x33d5c5e60a3f64eeULL,
0x284d22038b8acb6fULL, 0x4f69f38145ba86deULL, 0x306eb189c67d6d75ULL, 0x4f0f79eb2d924523ULL,
0x98505c85c16c4018ULL, 0x684bc14ae520d034ULL, 0xd9bc8dbc651e3e48ULL, 0x62bbd623a2532c35ULL,
0x9e5d7a332ac5a2e7ULL, 0x134ac10a66909f2bULL, 0x294ded79913c9c5cULL, 0x5a4bfcf34aae4228ULL,
0x652d44970cf7dc69ULL, 0x35f08a571316b46eULL, 0x3679c35cb7fd0d19ULL, 0x1c1a844974083cULL,
0xd3636c17b3670754ULL, 0x2365a8e51418582eULL, 0xa49012aa91ef513cULL, 0x699a784c2104cb09ULL,
0x4f3fb4ddc036cb3eULL, 0x23d67a308148fa0dULL, 0xd9aa34fc6325ed26ULL, 0x3da149343f59bacdULL,
0x4dc557d1ceade366ULL, 0x6c9bb47f8dc8c6e2ULL, 0x2966e21030419d59ULL, 0x25ad1874cf53330cULL,
0xf8193baab903d60ULL, 0x401239915da48fbULL, 0x27584c2ee8059851ULL, 0x6acdc10404b6cdb0ULL,
0x9144fb3d23df8e3bULL, 0x4964a5a54b5cbf87ULL, 0xe8b7ae5657c57309ULL, 0x798dfb0a66eed55ULL,
0x21e36fef9aa453eeULL, 0x1d9e4ffcc4818d89ULL, 0x502b1d5a349f40dbULL, 0xdaecb8641228475ULL,
0xafad7aae90b62197ULL, 0x1ed18919e6d99efdULL, 0x1796a98ff289a29dULL, 0x28fa365c0654734dULL,
0x768f1d887cc53bbcULL, 0x6039a4e94561d1a9ULL, 0xc33b84f782ff1eb0ULL, 0xdbbaad1a410de8ULL,
0x26d098dd9a82e9e2ULL, 0x65ad0678ec7b3f4aULL, 0xfc1f64cb51483f1dULL, 0x5f2583bdec75110aULL,
0xbe71cd89f6f08295ULL, 0x1c1920166cb08e9ULL, 0xeb47a27907ee65d5ULL, 0x2f897a5c90e5b195ULL,
0x139a89fc039e042bULL, 0x22ab1e0ad85f2880ULL, 0x148f5c77b2867979ULL, 0x5876f0dd99a78b21ULL,
0xc1c67a449ef66098ULL, 0x5745671ca2f8ad5cULL, 0x10aee4c9a164bfbcULL, 0x4ed05a9445307402ULL,
0x4ddc882a167dfd2aULL, 0x55462eec69343ebbULL, 0x67f019200d101b1aULL, 0x38ab946a070d294fULL,
0xd6b80326b09e9d68ULL, 0xd30138eb1371936ULL, 0xa2d69161c3f5404cULL, 0x17e3a61335c82996ULL,
0x5ec96947147c5b40ULL, 0x6f7596f84153bf3bULL, 0xd106f0a4d8513d9eULL, 0x7062da7f4d727f6aULL,
0x16940356986e5c24ULL, 0x2a1b40cec77569bdULL, 0xffb69837b5452fb2ULL, 0x369e611333110a91ULL,
0xa2909146ce928867ULL, 0x6c16ee795a75f70dULL, 0xf821924710665bacULL, 0x2103ecb59c2e3230ULL,
0x46422886893d69b8ULL, 0x30d0a84850472264ULL, 0xd54601c8a2249625ULL, 0x35a80aa88f045fb9ULL,
0x54146941bb47d51aULL, 0x1743514dd74a38aeULL, 0x7fe16754f27d2b65ULL, 0x5da646f96dd67edULL,
0x76cbd638a948ddceULL, 0x6d90356cefd71933ULL, 0xb90f9d9d4bbd6c1aULL, 0x32a0d63fa9b9d1d9ULL,
0x45cc2bc2a672987aULL, 0x2b6ce4a8ea94fe8bULL, 0x6c040a5623a45536ULL, 0x4daeedfba3935f53ULL,
0xc011a713124d456ULL, 0x6dcdfa3248fff9bdULL, 0x27724eedf4498ad0ULL, 0x186204c65e6fb75eULL,
0xfc3cbcd671904180ULL, 0x4a0b9e4a30d4a61fULL, 0x78b18826171fa37dULL, 0x4526c2a804f96d1fULL,
0xca318c731a9120adULL, 0x60c00a0d6924cd58ULL, 0xd1ccf5a0715a6e78ULL, 0x2c2933debb738cebULL,
0x48c3d9a1a1c75481ULL, 0x655e13993d052aaaULL, 0xb1cd31cdf0d8637aULL, 0x86930936d8a3528ULL,
0x1da4274ed80ffb84ULL, 0x507c19ef54a22771ULL, 0xec4785805dd70009ULL, 0x8c54674896801c6ULL,
0x7976d5fb96bba9abULL, 0x6fc6b18cb344b902ULL, 0x1f061e28740d854bULL, 0x4ff326bf97e2179eULL,
0x5e948d170a67da6ULL, 0x2fd78e41cc1700abULL, 0x2103d23e7631f84ULL, 0x63ad8c716289e1a2ULL,
0x204e67963fa7c353ULL, 0x379cdd8bc74c0ed8ULL, 0xb10b05c4f273f986ULL, 0x328a498c5a445a4aULL,
0xcf6c0773cacea123ULL, 0x51f5b579e609968ULL, 0x618a0564c515421dULL, 0x66c0a1186378cc88ULL,
0xc9ea5316922d7a3aULL, 0x138c210fbf19494bULL, 0xf534c206a03b002bULL, 0x36c1173d05b1b257ULL,
0x6dc760e563b366cfULL, 0x7dcd442d281452e2ULL, 0x4d36631606e0264cULL, 0x476dc66db8c8f2d1ULL,
0x89eaf4801ff7dd54ULL, 0x1e9fdeca6657c319ULL, 0xa1a466ecb2c3a8f4ULL, 0x4d94d7e7fd22bbc6ULL,
0x6bf5b58257ed387bULL, 0x4c836f8e006da76cULL, 0x228098496beca652ULL, 0x1f6f3d91d7e33eb3ULL,
0x828edc57329a0b1fULL, 0x78332cb8e4cc90a1ULL, 0xe471963f58a8482eULL, 0x26109ff020788830ULL,
0xcc47e645d3e6dd60ULL, 0x4328bac901799627ULL, 0xbd4de219e202b90fULL, 0x2842ef57ff1e7b3fULL,
0x4367d81c26e753f0ULL, 0x42a23a2f38af711cULL, 0x2ef5ec8d2b20c2a1ULL, 0x46dad53966b3027fULL,
0x67742f32ef02195eULL, 0x2ad4a601e1cad8ddULL, 0xf4e138571d573e33ULL, 0x34dded3f3e112262ULL,
0x29dc4ae6adbb6b5aULL, 0x4dffdcd5c5d3d7d3ULL, 0xd606653fbb258010ULL, 0x565921e9d6dd8b46ULL,
0x8abde2d1c877aae7ULL, 0x731fd6ee427f3440ULL, 0x403a81fb168b1a38ULL, 0x5ac4a26c7d9a840ULL,
0x94be06c4746f4d26ULL, 0x7e557cb4b4be9065ULL, 0xe1e5fe953f658cadULL, 0x6b03a9a02bc91ccdULL,
0xd80e81d6354d26cULL, 0x77a9364f604a3855ULL, 0xa2d15ba6481b65e2ULL, 0x6b48ca5461de5450ULL,
0xdf32838fba98620ULL, 0x12dbbcc92d04bbd5ULL, 0x462ec81a8bdc56b4ULL, 0x7fb9b2d0aec54030ULL,
0xdb99db0336ce3656ULL, 0x4dbf964df23aedcbULL, 0xf182e5fabd433280ULL, 0x2b22fd68d32c726bULL,
0x974141cced5f91dfULL, 0x15104380fe0103baULL, 0xace0a79c61c8b0bfULL, 0x38e42addd79f7573ULL,
0x4a927d03f7eeda77ULL, 0x5390589168f06c23ULL, 0x6b5dc677531c6abeULL, 0x396d5ac5e6cce75dULL,
0x6b3c947deb9a5dc0ULL, 0xeba709dc9a12a89ULL, 0xb0f25aac1fabf1b7ULL, 0x4fdf324318914cULL,
};
static const u64 PRECOMP_TABLE_1[] = {
0x301069cf6db8810dULL, 0x21f22f9a27b9aaf7ULL, 0x2bcb0a727e17591fULL, 0x41c2a1fc236e73b0ULL,
0xad4dae7baa68f2ccULL, 0x2d918764e5436d21ULL, 0xa73bbfbec7ab0d77ULL, 0x271f30e0270f8f56ULL,
0x2cdbb43cb733bULL, 0x710b36b05fdbae09ULL, 0x88152345d28369f9ULL, 0x62689c901a4c8229ULL,
0x3b5cda29d163fb39ULL, 0x15d42ab1a37df6e9ULL, 0x780e9541c2c13d00ULL, 0x5872d550ecdb1d12ULL,
0xff172a9d280b3e76ULL, 0x6526da7395a8e908ULL, 0xb36a046347165b30ULL, 0x1ddbf26700168766ULL,
0x65039698aced9e37ULL, 0x3d8b436253b84f0ULL, 0x42111f8d4713406aULL, 0x295ce6f1b14ee296ULL,
0x287c69d723e857e9ULL, 0x245aa48528de2131ULL, 0xb00415a05ea6236aULL, 0x3df52b2d4169c26ULL,
0xcd7a83c16a89614dULL, 0x36022145ca30a356ULL, 0xef5e8208ed5ccfdfULL, 0x2e5c77925bf8fee3ULL,
0x7a63ecbb402709abULL, 0x3dd6a874bbb7636aULL, 0x6e3da6bdedeeb941ULL, 0xad65100c2735971ULL,
0x74d1c074e9288196ULL, 0x70a45a2dc648cd5cULL, 0x8b0221f5820244c5ULL, 0x2dcdf6e19a2087beULL,
0x293c28f58dd1b188ULL, 0x10849a0f14f09ac6ULL, 0x2184bb03e3949d2aULL, 0x30a2182f31c3bc38ULL,
0x71d1488f94b04c4fULL, 0x2f1536e3183ab13ULL, 0xb26972e8c6929e8eULL, 0x4528e6779068e101ULL,
0x9f327ccd92608dacULL, 0x2203d73306ccb9d0ULL, 0xae626f66740530aaULL, 0x8dfbc663e570f85ULL,
0x82028be6fc2e1253ULL, 0x622f77a699812b33ULL, 0x7c1744e20cb11336ULL, 0x26016dcbfac02b92ULL,
0xa66ec1966dabc6f3ULL, 0x5e32f80198d80146ULL, 0x7c44a5f58cb84360ULL, 0x264d154544367cc3ULL,
0xd418bf1b5fe6c9a2ULL, 0x567002ef186866a8ULL, 0xc31bae294728a256ULL, 0x2ae57151c0dea8ccULL,
0x9333cba49b17fd8aULL, 0x1541ad89409e5f85ULL, 0xdd29df88b44e9489ULL, 0x73d6f92ecf0018fcULL,
0xaaacee3ce86557aeULL, 0x4d6bc7ea14f26d7cULL, 0x197b17cd830fc9efULL, 0x2857eb87ccc76bcaULL,
0x6de584aa9784fb1fULL, 0x1b578aec6f812069ULL, 0x898e35d1b07ffe7eULL, 0x68ec27d438a49209ULL,
0xe317d99a6e7d2fe6ULL, 0x1e6eae163d97123aULL, 0x70a4ff957e2f5b06ULL, 0x7fdd2420443ee71eULL,
0xaf2e80eeb8370393ULL, 0x3a3b91ac7335ad77ULL, 0x5c0bd524ab11d23cULL, 0x49b2ecf8ed8175bfULL,
0x7a041672dff98034ULL, 0x341586a12aaf1a8aULL, 0xd727cef08573f024ULL, 0x21924808d1e3faffULL,
0x5ab1601c9e3878e8ULL, 0x26e10601059f7914ULL, 0x13bd2179bd2d27c9ULL, 0x4c97dcdce04ef8b0ULL,
0xc78950569b0317d4ULL, 0x4d5ecf4b3ea04737ULL, 0x9d90109341e2cbecULL, 0x24a549b197676fa0ULL,
0x1b5029896924350ULL, 0x4fbd341da98ec729ULL, 0x866cff26a8747ff0ULL, 0x4c1bd4bd98edac85ULL,
0x3dd0f12244d66fe1ULL, 0x8c0226454feac51ULL, 0xba7723c5e408eba1ULL, 0x2d4136fd09ccb7f4ULL,
0xa33f9db1f9745b09ULL, 0x5358113f0df4cb82ULL, 0x7dd88780aee53e8cULL, 0x67dd8a6fcf408dd7ULL,
0x5834cae65c1c811ULL, 0x5494f87b40c05940ULL, 0x5a2571548df208b3ULL, 0x5bb284f3605bc635ULL,
0xdef2410a12898c85ULL, 0x47a143f272821600ULL, 0xfb00e89157c8d2b9ULL, 0x7f1f5262ca871c3ULL,
0x8740ee0bd0ae0d43ULL, 0x72de44a2d03c1c57ULL, 0x61a9fd72359a8f94ULL, 0x4e7929ad9b9a9faeULL,
0x793843e882fc2930ULL, 0x64150d9409ef1610ULL, 0x7803e25cc9a3eddcULL, 0x6d21b5ca96e06ad9ULL,
0xe3466495843e8a51ULL, 0x1b305b58820131d1ULL, 0x13d6fe6ff51af4e4ULL, 0x382fd40b8808aadaULL,
0xe9b4b53537435aabULL, 0x2d40ff9d8e5368fULL, 0x7954d3c6e18964f3ULL, 0x662c18cbeb09c32aULL,
0xa006df59533157b9ULL, 0x3d7ae32c0df645aaULL, 0x4010b25baba8271bULL, 0x4868fa2684187dd9ULL,
0xa8c4770a6468b089ULL, 0xefba74c0751bc9eULL, 0x2503c0613e10b9acULL, 0x6dcffcef335add24ULL,
0x49d3e9bfe1c15488ULL, 0x49995564e4502880ULL, 0x12bcb1e0dcc439f9ULL, 0x274f017e3a621d25ULL,
0xb4ac12a6c885175eULL, 0x7b49df626945920bULL, 0xbd0471d0f79ee1b3ULL, 0x192963dc6648cb86ULL,
0xe7edfebf6968cc57ULL, 0x72000d36acc60ce8ULL, 0x2b401172eed9ae21ULL, 0x63a65049d1b684baULL,
0xa97e0897fed13946ULL, 0x55327523dcde55a1ULL, 0x8d02854ff02014feULL, 0x7f9676dc8021c9d4ULL,
0x83355b4b08790842ULL, 0x70b65e5d6227456dULL, 0x5833baa352833f8bULL, 0x55098215b0e97516ULL,
0xb378d7483850ab83ULL, 0x5fdf995f139c07e3ULL, 0x14e0cd7bd20f33f7ULL, 0x585cf3052e9e6fb7ULL,
0xeba98245b2d77c2ULL, 0x6a282d0d336d1714ULL, 0x7135cb317a2de61aULL, 0x56dc1e51ce30cc6ULL,
0xc7824343dddeb832ULL, 0x1f9a772447d61a43ULL, 0xec6b7ec53d140256ULL, 0x6c9eca65e82b94d2ULL,
0xb90d1a13a0d00abdULL, 0x271a6935779a97fbULL, 0x494fbdee8a0f8022ULL, 0x5d4755b017599f0ULL,
0x4792372db91474fdULL, 0x2534762252619b6eULL, 0x626c3101a971825aULL, 0x2c5fddedd877a635ULL,
0x3b646b48965db246ULL, 0x42aeaf9cd388715bULL, 0x55137dcbca9eb824ULL, 0x7f72a5bb9cf70d98ULL,
0x6b63d2744e7b5945ULL, 0x5b6994420978fccULL, 0x6c1f9c1bd4362e6aULL, 0x7dbd3817ead5c09fULL,
0x701edd6ecb79d477ULL, 0x15d77476708d19c6ULL, 0xdc4620434d9beceULL, 0x419f4d0ec2038c0cULL,
0x402ba9f72eeee6a1ULL, 0x4461e42de72fc0beULL, 0x943bde9cd64fb36eULL, 0x6ecbf4e697de1a68ULL,
0x2e74c8fec6dbba5aULL, 0x579cfcd900ef70bcULL, 0x47b9b0ada4db7a81ULL, 0x5cd5a46ab59175e8ULL,
0xe8f12d4c2d2dab7fULL, 0x142cf44f762f42b1ULL, 0xb08b05b829fd9767ULL, 0x1115674247867689ULL,
0x3ac03911493dec47ULL, 0x221ebb9e7528fcf6ULL, 0xea142b3203d96ff3ULL, 0x2a4ba52306dc39fcULL,
0xcc2821f98b2093bdULL, 0x18e67459c968360ULL, 0x97be323f71a1b2d9ULL, 0x2fe7f09da271de78ULL,
0xbc08779749102c0dULL, 0x795d090d1db6b3d6ULL, 0x159477a3400f1fd7ULL, 0xb511821e3f967b5ULL,
0x9d75ca23170cb72aULL, 0x2ff36e6903ae63edULL, 0x170af33f70af7aeeULL, 0x74ef4f7f2cbcb394ULL,
0x6897596d338993feULL, 0x312f209d4d29c6f3ULL, 0x67c7e6a6202aab2dULL, 0x76ee5535dcc6e25cULL,
0x1f1d2135629cbe4dULL, 0x4a8bed347b761c32ULL, 0x7122fba8ac9e4152ULL, 0x152a1180e0ccad9cULL,
0xb7b93673a04a362cULL, 0x75976b44e7fd84c4ULL, 0x524b81e39f8adabULL, 0xefdb37af2282745ULL,
0x3a694a628f6d0df2ULL, 0x1da1e5a9a3e33368ULL, 0x7a2b6191f38b17e3ULL, 0x50ab5f1c72634311ULL,
0x7151fbae4b607bfULL, 0x2196c0b4dcacf757ULL, 0xa46b8fba92370764ULL, 0x6f5709f8b62a9c0bULL,
0x5ad8c9212b77ce91ULL, 0x2f20092b7eef4147ULL, 0x387ee2edb7e598eeULL, 0x443a302e23427825ULL,
0x9feaadd1981ba9edULL, 0x197450aaabeb68e6ULL, 0x1c92e0d481fbcf4dULL, 0x1dc2e5c6f4eeb6b6ULL,
0x49815a78f14a855eULL, 0x388f90e937e43996ULL, 0xde6550ae83413a92ULL, 0xf7bdf265a5ba398ULL,
0x9c3ab9955e9bc2a3ULL, 0x6be133bcac1b03e3ULL, 0xe59b9d557231f41fULL, 0x3d63b943ab92e807ULL,
0xc88f45f9372fab21ULL, 0x5725d4103cddf508ULL, 0xc741db5e7edc9265ULL, 0x62611bd43024a66eULL,
0x7787b64c68fdc38fULL, 0x7fc053a5cbbad49aULL, 0xe6b7bc22369c7e82ULL, 0x7c67ad3ae518834dULL,
0x5f8e61e25a5a5f13ULL, 0x38f794dc8fc5cedbULL, 0xd30019525a89476aULL, 0x682c08de6bc076d1ULL,
0x82746bad4129a8f1ULL, 0x495b1841dfff87eeULL, 0x77e88b267768a7f9ULL, 0x7da3be152e178829ULL,
0xe077f5808e70633ULL, 0x2a6d914c6a5a5746ULL, 0xf6b27fcd9b56161dULL, 0x423a7bdd796a3cb5ULL,
0x5628243268373e53ULL, 0x5fa01b5545160fbdULL, 0x62f384b1944eda2cULL, 0x1f63ad906a2715baULL,
0xad6150bab9ad2e16ULL, 0x140c03e5876b23afULL, 0xc166a78c06008c73ULL, 0x19b59c1144eb386fULL,
0xd50a23b39f5b2f1eULL, 0x2f2306de2e671cb4ULL, 0xecf8718bed398e2dULL, 0x29d2091853904266ULL,
0x41d6b55c0ac88174ULL, 0x39dbe69d192d3fd5ULL, 0xa29a83477b912223ULL, 0x61605862f5029bacULL,
0xdab296b7e0af26b8ULL, 0x609a94c5df41aa53ULL, 0x1cf360813129033fULL, 0x5bef2911db5bd2e0ULL,
0x43a995a72891623bULL, 0x446015bfc7e2f6ddULL, 0xad3a57daae146760ULL, 0x2aaa2b7848bf2827ULL,
0x90e725d6f0da5bbdULL, 0x7fc39b14a7ca3abeULL, 0x35068ad2607092feULL, 0x7ff35a8654f6d75ULL,
0x96af2b77dfbb8ccULL, 0x461e5e0c521be671ULL, 0xe75bcca9d7ebb5d7ULL, 0x502062e5c7fbc852ULL,
0x8fdd1f7cd1d69247ULL, 0x6c450afe739f8fc8ULL, 0xd869710e3796b096ULL, 0x7db2300ec939d933ULL,
0x4c22f24306be1243ULL, 0x38139fec6a90bce0ULL, 0x84407dcc9e1c482fULL, 0x523b860602c442e6ULL,
0x456973aa6ceae464ULL, 0x6728eac672679508ULL, 0x134fd0270e566702ULL, 0x581c40799cf950baULL,
0x661a2060f96126fbULL, 0x6f00bb7a1ee4a4b3ULL, 0xa0dea6320f1dab67ULL, 0x47ac989eecb18deeULL,
0x118eb58b30bf3d2ULL, 0x42b6c15f8a8b08f6ULL, 0x9d56c3a55e093ad6ULL, 0x1196268399f0f698ULL,
0xa64c1f3092d0e607ULL, 0x1a71ac98dbec522cULL, 0x95627e45c632f415ULL, 0x2e6b5a70c690bd8aULL,
0xac5ca4001d11fafbULL, 0x68a1c20c0f400929ULL, 0xe732606305a4e7dfULL, 0x5f1d7a5ee855fb72ULL,
0xbaee696afaaa8e11ULL, 0x2de2168a0d8982efULL, 0xa14f3ff81348550ULL, 0x2c98eadf4f21a133ULL,
0x9c34fd267da9c770ULL, 0x6a3f76618e07cb16ULL, 0x490c5f8316df0404ULL, 0x394231bf0b92ae1eULL,
0x212807b5a1ac7d78ULL, 0x75dd8e5918bda9f6ULL, 0x5a864037af805f32ULL, 0x17e8778056e36a67ULL,
0x2bf43238c308daefULL, 0x70aa77faf5aa8c83ULL, 0x3c75c1955e2aa995ULL, 0x2787a3956e44a9eaULL,
0x49b499b0a6fba930ULL, 0x5a8380c7214017d8ULL, 0xbb64586870dbac4dULL, 0x76a8cc6b991f1dbfULL,
0x2fc5fe911c94e395ULL, 0x45a193dba41b624aULL, 0x1351c8dc1267fe67ULL, 0x5da554f478864b0eULL,
0xbbad14a54b9ade2eULL, 0x38f81c665585a828ULL, 0x5ddab9d284afccfbULL, 0x53236e0ee3f4c30bULL,
0x698dfcf290a5f60aULL, 0x46a902987548990eULL, 0xab83c7c27c49d608ULL, 0x173aae4c2df4739cULL,
0x7fc1f77aad3e0af0ULL, 0x93f7f11b86a836aULL, 0x4899e82d1ed4735fULL, 0x5b5984011a3502b7ULL,
0x8055e2cdfaa5fbb9ULL, 0x748c9dbd3427af34ULL, 0xbfc904eca24effd4ULL, 0x5580b8a5a7fe202dULL,
0xbc4f3f9d951f304ULL, 0x4a3107253d2edadaULL, 0x321b0e879c110c57ULL, 0x6fc553decd7ca43eULL,
0xad0bff5aaf3ca0e5ULL, 0x4415bbcb335fd098ULL, 0x198c1782fbd5c2d2ULL, 0x7f7dbd4b8ab854eULL,
0xcb8902b795e295dULL, 0x2471aac94e9e8d7ULL, 0xf581914d35cfd2dcULL, 0x78c47121ff344949ULL,
0xc03bb1b17181bbc1ULL, 0x74850e2186f729f2ULL, 0x7dba79c1b2c1ca39ULL, 0x63a1efdf6eb9c229ULL,
0x630a73b9d61535daULL, 0x69e8c4b67817a5deULL, 0x9fa102aabca68779ULL, 0x15c1ca394435462cULL,
0xf368c1e57ce390ddULL, 0x1694fb76cf141b4aULL, 0x6d3b78bf4cc3bad2ULL, 0x49dbc945c2e213a0ULL,
0xed1ff346cfde35ccULL, 0x56ec24f404d5a991ULL, 0xe036844c46998cdbULL, 0x8e60c02907a8a7aULL,
0x78cfd2c09dd0e55dULL, 0x501c9752651c9ac8ULL, 0x84c11d79da11873eULL, 0xc0a026b8c1c766ULL,
0xe7e3433aa59669a0ULL, 0x8957c0f3f0e2ffaULL, 0xd3791bf197b3c989ULL, 0x433144585836d666ULL,
0x460933913c545722ULL, 0x10637a754e256111ULL, 0xa3689e2a2de5e1aULL, 0x1af9f9a3c779f5e5ULL,
0x21f0f1e83d0a2e96ULL, 0x689119fbc9a6b5a3ULL, 0x412fa26aa2067bceULL, 0x55cee7bc0d20d7dfULL,
0xda418e5d1994881fULL, 0x398171e5f289ae5fULL, 0x3b9b7107ef2b26e0ULL, 0x5c4a1f521dc2991aULL,
0x436ac1164f4f1f9eULL, 0x55fd213f6835eab0ULL, 0xd00f23fbb85a1d10ULL, 0x1722697d619d44ebULL,
0x447b5cc348a63ffcULL, 0x47118924d72fe5afULL, 0x82d07697d483d6a1ULL, 0x1352e91c66c4db83ULL,
0xce3826d78e3f20eULL, 0x34f5b2d1cb946a6bULL, 0x96219a51c213620bULL, 0x56bf7f3818bd3825ULL,
0xfdf4665dadae16f5ULL, 0x1294f3c98de5f6c7ULL, 0xd29d5a251fda7b67ULL, 0x143a26b06e2e7246ULL,
0x1e21f70fe296815bULL, 0x9e0cca311c191d9ULL, 0xb566662b4a891737ULL, 0x14511432bb481ad8ULL,
0x521aca065cd4e430ULL, 0x5d22274eb0a6cbe5ULL, 0xdcc2479764d7d2a5ULL, 0x2f59e6558e52b766ULL,
0x472fb78795593afeULL, 0x48d8bc3855db58a7ULL, 0x9d920d98cfa6f5deULL, 0x73c130015a069004ULL,
0x26e08eee9edc8fa7ULL, 0x1fe5cc1416b1973ULL, 0x62624741bba8a8cdULL, 0x67cf449b527c9e0ULL,
0x6d4e202ab2cf039ULL, 0x1b16cb3ae7e8b027ULL, 0x1e66e1113cca0c7eULL, 0x68657979b6108c18ULL,
0x63d268858d3eb551ULL, 0x270ec8754ca5b93bULL, 0xff52c4dcb6493c76ULL, 0x679bd00d04b8ffafULL,
0x4196a32cd5b2a161ULL, 0xa92363a6e89e0eaULL, 0x8c71ad308eb84cf3ULL, 0x2bc693a12c3436aaULL,
0xa5623d2ac5e9721eULL, 0x154f021aef52fdaaULL, 0xbff8d843ed571509ULL, 0x13a86066fbc21b7cULL,
0x3c4902a2caa2db4eULL, 0x142497141dc102b4ULL, 0x66246664b2d9d05cULL, 0x2e88b093201fe527ULL,
0xb7eebcd4f51bb45eULL, 0x70d263a0e9e730f0ULL, 0x6975b54a5f9c34e8ULL, 0x7ffc20bc83cd0e20ULL,
0xa92a8d3d630c6135ULL, 0xfaff0986350a220ULL, 0xeef8f663526cca25ULL, 0x4b0e261a39a64efaULL,
0x86bd3b07c2255ea7ULL, 0x70685b308617c06bULL, 0x9c5816b128596836ULL, 0x44dd4fa4dc047437ULL,
0x9b1be2b5fa47ae4ULL, 0x1ee9ce8da552d6eULL, 0x6bcbb55a96f7b2c4ULL, 0x93e83a3e4d78bc8ULL,
0xf760b90a878546faULL, 0x2136d1ef5164ed0ULL, 0x9b9ade0a8b71b621ULL, 0x79fe1f736fae252ULL,
0x6d8171ba331ed086ULL, 0x382a1d8a6e70f269ULL, 0xbb18096619f0c917ULL, 0x6a240ac8b437de4bULL,
0x5b9e27e746aa0f32ULL, 0x2d176a92e444a829ULL, 0x3d3ef608555e0615ULL, 0x56b99a18e25c5d34ULL,
0x6604c3cdf12ed7efULL, 0x12068909670dc16fULL, 0x62cf0041670ea283ULL, 0x309d0acb9b131ff5ULL,
0xdd7dfc079958ed34ULL, 0x6bbd9af21524de22ULL, 0x94d10752b716bb9aULL, 0x63b9f5c0231840baULL,
0xccba5270bf0274f0ULL, 0x4ccdbae5909c5977ULL, 0x38c3b8aea6b5ae09ULL, 0x64ef3005eb338f70ULL,
0x4dc4617315b675c8ULL, 0x73bb018f6f51fb7fULL, 0x9927f261f53fccf7ULL, 0x11533240a214bdc8ULL,
0xfffa980b595a3546ULL, 0x2f41fe14b28bf6ULL, 0xfbcf78b82d09a28cULL, 0x437172747744cb78ULL,
0x9b272407b0a60df4ULL, 0x717ca18cad643d31ULL, 0x5e9efd4a23308649ULL, 0x7a3336f4f9953b84ULL,
0x601667cdd4bf97d4ULL, 0x1ba3fc0855b0a5bcULL, 0x4b637efa4df08466ULL, 0x2350364a5a5edcc7ULL,
0xd08feec126a82344ULL, 0x45842d954583b419ULL, 0xd5d041a3a79e865fULL, 0x5b3a888a4a72a822ULL,
0xc6dfbe22213f4c17ULL, 0x789ab250c8c655f5ULL, 0x7007ea1271bea997ULL, 0xc2dd9c325788efeULL,
0xe7ca75088f726b32ULL, 0x585cbcc9279ea019ULL, 0xa60b653cd4e4032dULL, 0x2166440e311d475ULL,
0xaf98d726b66a8342ULL, 0x5dfc63e3eb5caf45ULL, 0x8184d0434e83eefULL, 0x33e86e50fe203cbaULL,
0x678c342846a3fca3ULL, 0x3beb5e962f81e7c1ULL, 0x18327ced59ace306ULL, 0x2dde4056316e38faULL,
0x6a4f57fd12451691ULL, 0x18541c637f0240e0ULL, 0x370e5ab9652005d5ULL, 0x2a11e343b2cd0fcdULL,
0x348375eb9700e04eULL, 0x243d29a0a5b22ac7ULL, 0x17992ab71972dfddULL, 0x498cad9b99124f93ULL,
0x33216b3ece212b51ULL, 0x56965b6935734d71ULL, 0x107d2dee6b3bf08ULL, 0x3b75ee96bca4f3b1ULL,
0x2654b3ce6f5a715eULL, 0x874cfa7edd005ccULL, 0xa8205c11e35c53e1ULL, 0x74cf30b4fab6f512ULL,
0x38358d48616118c8ULL, 0x63c918da56948b34ULL, 0x6c37a2358e56cf0eULL, 0x5f80a7ce0051fc4ULL,
0x1fb7f8238c60810aULL, 0x4be34742c57401f4ULL, 0x449d69272e0147dbULL, 0x3f18f5b522c8caa4ULL,
0xffd867df16590dc1ULL, 0xd02beeab6b5b759ULL, 0x9e138eb857e6723fULL, 0x1472c67251d75c1fULL,
0x91174b02bacfc9caULL, 0x605c2e6fe84442caULL, 0x8bfe5c1b960807acULL, 0x55a5963f06f8cad8ULL,
0x52c2d702eca04ULL, 0x7b9861735eef3bd8ULL, 0x838d285ecc648d4ULL, 0x3156342fd2ca8d98ULL,
0xac670521aa120330ULL, 0x502aca081e1e9b27ULL, 0xeacdc47a0e189570ULL, 0x53c0356edbea8db4ULL,
0x5860c34c5547a1e2ULL, 0x441aa67e0a800059ULL, 0xa5461a2f29d8b252ULL, 0x6279e6df1c008c1bULL,
0x6991f834221e16b2ULL, 0x22c1e35a61b14c4ULL, 0xfdbea60f389ceec9ULL, 0x155efdffc602f51aULL,
0x443b7e08d41a81eaULL, 0x63b6e658dd7541aeULL, 0x8fbe9b9ddfc1b108ULL, 0xe5cb067927e358dULL,
0x9baf25f3dbf73d35ULL, 0x6bc919d9ba230300ULL, 0x2890153e709ca522ULL, 0x3091e6c404d6a7baULL,
0xd7c3bb05e8550163ULL, 0x7af385478b855e68ULL, 0xcbbe633454d6a840ULL, 0x16de3eb027f7fb1eULL,
0x29e56518de69aeadULL, 0x21c4025c9da271aaULL, 0x42880bd7d0b6d849ULL, 0x135a641bf281c82aULL,
0x879918c641060556ULL, 0xfd8b00c56cbe7f1ULL, 0x4c8a48f182c1276fULL, 0x368023c73dacfb18ULL,
0xa07923e3e4bbcaf3ULL, 0xcd573fc2adfa942ULL, 0x83c1bf2b3aa2a15bULL, 0x39fb2351a51f7a7dULL,
0xfbaa61a15706d9eULL, 0x1bd4e33ae5530699ULL, 0x5624524ac2869b80ULL, 0x98e928fb2db568bULL,
0x6305cceba5548c7ULL, 0x2b8b7e6de7f7a4d9ULL, 0x2592c4c7e83ccc2dULL, 0xf1c9be5be35439fULL,
0x20c6fc22313899ddULL, 0xc8ac96b83628de8ULL, 0xa2a12550f2029db5ULL, 0x14dd25eb835fca94ULL,
0x1c59c037ff73e4fcULL, 0x5a067b0673e534dfULL, 0xd8c2be9d56af75b5ULL, 0x3fa489c3746d6b6cULL,
0x8e55659aa571a3e6ULL, 0x3e7550bf1cf61ec7ULL, 0x22c070072f8ac317ULL, 0x72281272de28aa7cULL,
0xc46c227db6cd6054ULL, 0x4120fbbe00956d06ULL, 0x78bf4cb83521677dULL, 0x482c2c157dfae5c7ULL,
0xe0b28978c516d225ULL, 0x370169728a455b24ULL, 0x13bfd4b36b18a79cULL, 0xaf69ea8e24bb3d0ULL,
0x196401090fe7ecf3ULL, 0x2c57b831502e1e31ULL, 0xa651fc8bb4160091ULL, 0x58deddee863f5af8ULL,
0xcfc508fe75b7d8d1ULL, 0x71308d77c3a87065ULL, 0x92a0d3f3e2cfc0e9ULL, 0x5524c033cffb4956ULL,
0x5c92213b903f5798ULL, 0x68e8a8c718ef1f62ULL, 0xbff3a1f7c4b0f5a8ULL, 0x5094bda3e016fca5ULL,
0xc95ae1b2bf1750d1ULL, 0x31db65885dbe18fcULL, 0x22813311484ecb38ULL, 0x519d825120399a13ULL,
0x285c40cfb2308652ULL, 0x3514b00edbc410ddULL, 0xf3a10707e3f6dd2dULL, 0x340f71000b3565c1ULL,
0x418e4223666fb998ULL, 0x3ed6a8e507ed05ddULL, 0x5a4468eca9e0c977ULL, 0x1190adf4801f1e3fULL,
0xde57c1880c1f2aa7ULL, 0x51870b0b0b3dacafULL, 0xdcb3a31433feea42ULL, 0x7000de297cb24482ULL,
0x96004ede341d2b2aULL, 0x4fc0e616615370dcULL, 0xaa21c58e7ab57a7dULL, 0x83bb5d9996a00e0ULL,
0x9e00df7fb7fc2557ULL, 0x7f3d571a21a6c23dULL, 0x9a6fb913d0a335a7ULL, 0x78b8672418b89541ULL,
0xeb6e91fa9896662bULL, 0x951a780303e5169ULL, 0x888ee2d54365343bULL, 0x42948390b29a2808ULL,
0x9044b46776ab9f5fULL, 0x562f3cca78864838ULL, 0x5768e6f174f86df4ULL, 0x41163ccca76f2edaULL,
0xd430a0dbc457cb75ULL, 0xea4b7fd9d92251fULL, 0x10964a60600fb424ULL, 0xd9c3b40771a0433ULL,
0x51008e8320ad686aULL, 0x6a015de843c608b5ULL, 0xc3eae7439d49b959ULL, 0x2746726c70baa22dULL,
0x42c2c844f956755fULL, 0x29cfae193e270725ULL, 0x2ec9ad456a54b8fdULL, 0x783ae9bf638723edULL,
0x4d1fd1dc20657b36ULL, 0x3aa6bceb26be740eULL, 0xf43e509e7e74b04cULL, 0x112e87943306f48bULL,
0x406bdca20d27dfdfULL, 0xa157d10dfca1e98ULL, 0x89f4bec369554a4aULL, 0x85371ce5767b567ULL,
0x732c05081f977442ULL, 0x970c0beb5f55bd3ULL, 0xdbf8b2663e876264ULL, 0x3006055b77ee72a6ULL,
0x2601743d6596843aULL, 0x4c5f031f49cdc915ULL, 0x75c670863d1a8756ULL, 0x1a16402091e931e7ULL,
0x263e8ab10ebaacbULL, 0x2353b6f44235870aULL, 0xa4ba232a407c18fdULL, 0x498469b604921ff7ULL,
0x3b66462f072dbed4ULL, 0x775320d9388e5cfdULL, 0x4ea986a4c5b70ae7ULL, 0x6c67f424e8a0b597ULL,
0x4d7637f781fb3787ULL, 0x714485a2199ba1c7ULL, 0xd222141813ee2333ULL, 0x664f7122fbce5921ULL,
0x923b7503bf40d66dULL, 0x5c353d05dc550c54ULL, 0xe89b94d1d092cf2cULL, 0x7c799cbcedd911ebULL,
0x7485d55fb6836d5fULL, 0x7facf1e90722db4eULL, 0x26a140da4d114c98ULL, 0x765b8bb6bcb1739fULL,
0x21e6684a7b8933a9ULL, 0xfe21760e08720cdULL, 0xef61f9ea2a90c21bULL, 0x6df054492248b34dULL,
0xdac083c5c882d499ULL, 0x1b577f6ff3402cd7ULL, 0xcbd117409f696616ULL, 0x40a82a168589cb34ULL,
0x55838a6aea91c13ULL, 0x613a9fc209e99b76ULL, 0x695589a09e4df444ULL, 0x2f746fab96dbfbbULL,
0x41f9245ef9de5410ULL, 0x503953c4245740f1ULL, 0xedb9a5033ef98d90ULL, 0x5afbbe5424e739aeULL,
0x6a3476833d4fe059ULL, 0x25914fdb93c3395fULL, 0x8f2cb32577ac5fd6ULL, 0x3ff5a248226c8e5cULL,
0x5c3f927fb9061a54ULL, 0x686106996e5ec3d8ULL, 0x7967d8d29b3c0939ULL, 0x49315aa79993a494ULL,
0x352beffc9e7d3bf2ULL, 0x477613a5c2454d5bULL, 0x6693018be849bb4bULL, 0x62e55b4b883c624cULL,
0xdf16a174307a3a8dULL, 0x5a5e47861ffee44cULL, 0xa9e1573b64886090ULL, 0x1f5ba5de12468ee8ULL,
0x5e0bc0f6d50f7832ULL, 0x1228c2f72dbb1ef4ULL, 0x28009823dcae887cULL, 0x3c2b824bf3f29da1ULL,
0x7cb7d6311ddc85e4ULL, 0x385a92c87146c0acULL, 0x90a6cf8651879ddeULL, 0xa445914ab011f0fULL,
0xa5629830a4b41ae7ULL, 0x27e7915a3ef37dbcULL, 0xb2ee6883a52c5b60ULL, 0x66efcf419e334c40ULL,
0x3ac003fc89e798eeULL, 0x219436484ed67e62ULL, 0x6b5373d3fedaf4e0ULL, 0x4574453be5743a35ULL,
0x6f7697ae035b92aaULL, 0x69d64bb9320956ceULL, 0xb066b0adcec7175dULL, 0x28183787111f6db8ULL,
0x6af0d2c2d14830e7ULL, 0x7c597a8e9c86242ULL, 0xa7e04f86ad45be31ULL, 0x2edc619506514e35ULL,
0x36863913e0645ebfULL, 0x3b7166fc6476b9b6ULL, 0x2f6c75bf174bcfdfULL, 0x6dd911cd787db7e9ULL,
0x4c85a241e6a2a078ULL, 0x67d2a5c507284d8fULL, 0xb5add452557fc393ULL, 0x7e8431f021fe3ea7ULL,
0x8218f15092647b4eULL, 0x461ced9cd4e79330ULL, 0x5fcbe013ee364cb3ULL, 0x5767aaaeec733200ULL,
0xa7d346189d75af4cULL, 0x5c3e00ee0d764a00ULL, 0x4d75567bf9912c7fULL, 0x69c49cfe524297cdULL,
0xe86b91726e1ebdabULL, 0x6b4fb447e0fe0141ULL, 0x141117625b146f72ULL, 0x452af24c401716f7ULL,
0xbb453e50d2e66bc1ULL, 0x7ea0eff56d45fa18ULL, 0xb813f9459f9e0c5bULL, 0x3647bbc52eed26f4ULL,
0xac14ee9dd945bc5fULL, 0x43a7ff285cb798eULL, 0x16e607c248794e76ULL, 0x44a229ef79798653ULL,
0x8e5c1dec70b67c91ULL, 0x5fcee35f29fcfcfdULL, 0xd24190deb66d98b6ULL, 0x77eaece796bf7db9ULL,
0x4fb06186ed172b1eULL, 0x3eb93009a9392e0cULL, 0xaa8ed5635b0fd12bULL, 0x15bea95458c3e023ULL,
0x7482d715a3ed9d80ULL, 0x2e3b0efb56d1da89ULL, 0x4640c71cb68605eaULL, 0x7958af61bc8e4642ULL,
0xe3ef2b34d56e33baULL, 0x237749b38a827190ULL, 0x5d8da85c8050cbcdULL, 0x2cfb952728993232ULL,
0x6bc506040d83dc8fULL, 0x15b6992c3d3fd88cULL, 0xa05671869b2a63d6ULL, 0x308e4c065c6c445ULL,
0x6ef964bf1d9163ccULL, 0x4ac2df7e093b99b3ULL, 0x1c13cdf9f4921128ULL, 0x2333cbb22c9a1245ULL,
0xfa01f7b09ae6ca1eULL, 0x2e136270183944b9ULL, 0xaddcea417488354ULL, 0x2765be34f907fb80ULL,
0x3d0d06c0d08550ULL, 0x1104ac5f5d3a8776ULL, 0x459004cc88634ae8ULL, 0x1fc40132181660f3ULL,
0x2085fdf61404abceULL, 0x6681a6872c043737ULL, 0xd604f4d75da385a3ULL, 0x7e21c1b93d68aa2cULL,
0x97de26fd1e340764ULL, 0x444c4b1e1c13a338ULL, 0xa4b4c1d5cbcb20ecULL, 0x763096267a05287aULL,
0x311ea0aceb0bd830ULL, 0x771f896bcd0ff789ULL, 0x807175480a6048ffULL, 0x2cdff003713c6786ULL,
0x3824f88ba5b83ceULL, 0x2c57a3d830d65dc4ULL, 0xfbaede8662688d9fULL, 0x48763e906aa26133ULL,
0x8064089089bf4831ULL, 0x13c66269a38ed362ULL, 0xb08df9654064177aULL, 0xb97ce73d587b71ULL,
0xc7407b727147651aULL, 0x77f4dcb8233e7ffdULL, 0xec9ab43ea67929b1ULL, 0x52405aa77de621eaULL,
0xec03fb7e7082f806ULL, 0x57ae8ccdf9ff26ULL, 0x2b8db55c11d8076eULL, 0x164bd5c95b2c8a0bULL,
0x570fb9d19f50160cULL, 0x73d26e58f37be0b0ULL, 0xdac55603af304134ULL, 0x79b2fc4eefcf2988ULL,
0x30499d27f0cddcffULL, 0x5336ea73e74a25aaULL, 0xf3902434b8f42cceULL, 0x2e025a05f6059a58ULL,
0x2a805fcd3b4df431ULL, 0x5f757575927f481ULL, 0x23b4446aacd0e2c1ULL, 0x22e325b72bc113d9ULL,
0x4156b1980a8c4e6aULL, 0x4c1ddb52f6078192ULL, 0x6d4f1df95aca5601ULL, 0x5e7d32e43b774c26ULL,
0x1cb3e9dfdeba027dULL, 0x669cab97770fcc51ULL, 0xaaa7f06bb34af1e1ULL, 0x79e71ba97959df49ULL,
0x2ab5a5c2579bb70ULL, 0x5e80a342f4f89f64ULL, 0xd37563ca47994638ULL, 0x66e96c8936687c27ULL,
0xa4bbfebf4b152093ULL, 0x226188d4d8a483a4ULL, 0x7ca7b69e54a26ee0ULL, 0x281f6c77156de3b1ULL,
0xe9274609ea1018a0ULL, 0x707effe9d05070c1ULL, 0x6b6166da84958234ULL, 0x5ce86fdec9a873d4ULL,
0x32a4f3765713d966ULL, 0x78d1e80d1a6cc1c0ULL, 0x7f5c44a61ea9f8f9ULL, 0x7d523f1e7b33e778ULL,
0x8e68ed457bccaab5ULL, 0x3b2301323b7f8cf0ULL, 0x8bf94c146026fbf6ULL, 0x77da19eec762dabcULL,
0xdf0be1f32c4a38fdULL, 0x37d48a5ed159bfb7ULL, 0xefd66032518ad2b2ULL, 0x2435f103b231cfdbULL,
0xa8086f8b04a7a8fdULL, 0x74b6c8bc2577f768ULL, 0x24046d7b49c8f7f0ULL, 0x2ba689314892b0fcULL,
0xec5b514742f05a2aULL, 0x9fa9b14e22b869dULL, 0xe28f97607034aa3fULL, 0x4e4dcb25982e83b5ULL,
0x1216e7d97f1cdbbbULL, 0x54795f1ab329adf2ULL, 0xaa517d614df67417ULL, 0x29c2ea6bd8c01f4fULL,
0x964ec340beae6ae8ULL, 0x2385431de6939547ULL, 0xa3b147b7ac425ea8ULL, 0x1a7e4007f64037e7ULL,
0xf96d11feb90e811fULL, 0x5f668bfddab5f57aULL, 0x54ba1ae2332f25e8ULL, 0x4fc6940526dfd690ULL,
0x63df3b17709d1823ULL, 0x57df873ae4bfbceaULL, 0x3a4fd8d15ae7f29cULL, 0x650b0b04ca18c7c5ULL,
0xab02a0531ba3dbc7ULL, 0x654dc30544f4b1f5ULL, 0x5a45a129ec472670ULL, 0x7ea48b6fa2efa495ULL,
0xae275cc9d0fe4037ULL, 0x17b23d44d517c15aULL, 0x6350e614a65257b4ULL, 0x5f9c64b6c8dd3ce5ULL,
0x6c58bf6537c920d4ULL, 0x391c3befcab0ab02ULL, 0x40074e95bac2d4e5ULL, 0x31e3afbd8ea8ffe2ULL,
0x3334ddcbe5d07df9ULL, 0x2864beb063a18152ULL, 0xf6e4acea3f4da261ULL, 0x52b644402fc83ea9ULL,
0x95985fd8092c6846ULL, 0x3434151e1b6abffcULL, 0x1c7879ca7aaef5f4ULL, 0x78b4d2f1d6b8edffULL,
0x1029aa93d4d1f07fULL, 0x77cc1457036cf532ULL, 0x3437f94ff44a6781ULL, 0x7c338070cb4562eULL,
0x831dc9a231ee2eULL, 0x1bf46c8d89ea2d3fULL, 0xa9fe0fcb93515f36ULL, 0x2c0f563a3051542aULL,
0x710843959b5f122fULL, 0x31fb5f7f7d8b438fULL, 0xded41cabc9e581aULL, 0x6761ed9be8483774ULL,
0x4dcf5e20a13fadcfULL, 0x24bdb651b0f29d3ULL, 0x930e8e39095677f2ULL, 0x3bf4555df5999124ULL,
0x7953a2c6048c6f3fULL, 0x3f7447aa9ac58fa5ULL, 0x9f0d8155aa9fdecfULL, 0x41e5bd9374e86183ULL,
0xcf69e66859834997ULL, 0x1c7fb848d779e6b1ULL, 0x8619d0d2b72a7128ULL, 0x22478b523d91a406ULL,
0xa799389599a17eb8ULL, 0x2e592560782e172ULL, 0x1969e5b8bfecfea2ULL, 0x193e7a2b5b7f0bcdULL,
0x32a1c5d27dce64cULL, 0x54bfc01c6198e4dbULL, 0x15618644932aa2cdULL, 0x186192b03b90ac9ULL,
0x2826a16fe7863e3cULL, 0x580dd79016edb45bULL, 0xe585fb5cdc2c6b6aULL, 0x4744bd2d43257b1aULL,
0x76078e950ebf7aceULL, 0x21d7c179f071f7a0ULL, 0xd10dbbe0705818e9ULL, 0xc00ebd1dd8d004bULL,
0xec25025e060b012aULL, 0x4d9ff0884fc7e7ebULL, 0x2bafb522c5214576ULL, 0xf05f25ecd9c5c27ULL,
0x38f56fdef27e26d4ULL, 0x58adf2c9bdbb6e4bULL, 0x405669c7dd133658ULL, 0x36e2adb04982d6a1ULL,
};

static const ecpt_affine *GEN_TABLE_0 = (const ecpt_affine*)PRECOMP_TABLE_0;
static const ecpt_affine *GEN_TABLE_1 = (const ecpt_affine*)PRECOMP_TABLE_1;

static u32 ec_recode_scalar_comb(const u64 k[4], u64 b[4]) {
	const int t = 252;
	const int w = 8;
	const int v = 2;
	const int e = 16; // t / wv
	const int d = 32; // ev
	const int l = 256; // dw

	u32 lsb = ((u32)k[0] & 1) ^ 1;
	u64 mask = (s64)0 - lsb;

	u64 nk[4];
	neg_mod_q(k, nk);

	u64 a[4];
	a[0] = (k[0] & ~mask) ^ (nk[0] & mask);
	a[1] = (k[1] & ~mask) ^ (nk[1] & mask);
	a[2] = (k[2] & ~mask) ^ (nk[2] & mask);
	a[3] = (k[3] & ~mask) ^ (nk[3] & mask);

	const u64 d_bit = (u64)1 << (d - 1);
	const u64 low_mask = d_bit - 1;

	// for bits 0..(d-1), 0 => -1, 1 => +1
	b[0] = ((a[0] >> 1) & low_mask) | d_bit;

	b[0] |= a[0] & ~low_mask;
	b[1] = a[1];
	b[2] = a[2];
	b[3] = a[3];

	for (int i = d; i < l; ++i) {
		u32 b_imd = (u32)(b[0] >> (i & (d - 1)));
		u32 b_i = (u32)(b[i >> 6] >> (i & 63));
		u32 bit = (b_imd ^ 1) & b_i & 1;

		u64 t[4];
		t[0] = 0;
		t[1] = 0;
		t[2] = 0;
		t[3] = 0;
		const int j = i + 1;
		t[j >> 6] |= (u64)bit << (j & 63);

		u128 sum = (u128)b[0] + t[0];
		b[0] = (u64)sum;
		sum = ((u128)b[1] + t[1]) + (u64)(sum >> 64);
		b[1] = (u64)sum;
		sum = ((u128)b[2] + t[2]) + (u64)(sum >> 64);
		b[2] = (u64)sum;
		sum = ((u128)b[3] + t[3]) + (u64)(sum >> 64);
		b[3] = (u64)sum;
	}

	return lsb;
}

static CAT_INLINE u32 comb_bit(const u64 b[4], const int wp, const int vp, const int ep) {
	// K(w', v', e') = b_(d * w' + e * v' + e')
	u32 jj = (wp << 5) + (vp << 4) + ep;

	return (u32)(b[jj >> 6] >> (jj & 63)) & 1;
}

void ec_table_select_comb(const u64 b[4], const int ii, const bool constant_time, ecpt &p1, ecpt &p2) {
	const int t = 252;
	const int w = 8;
	const int v = 2;
	const int e = 16; // t / wv
	const int d = 32; // ev
	const int l = 256; // dw

	// DCK(v', e') = K(w-1, v', e') || K(w-2, v', e') || ... || K(1, v', e')
	// s(v', e') = K(0, v', e')

	// Select table entry 
	// p1 = s(0, ii) * tables[DCK(0, ii)][0]
	// p2 = s(1, ii) * tables[DCK(1, ii)][1]

	u32 d_0 = comb_bit(b, 7, 0, ii) << 6;
	d_0 |= comb_bit(b, 6, 0, ii) << 5;
	d_0 |= comb_bit(b, 5, 0, ii) << 4;
	d_0 |= comb_bit(b, 4, 0, ii) << 3;
	d_0 |= comb_bit(b, 3, 0, ii) << 2;
	d_0 |= comb_bit(b, 2, 0, ii) << 1;
	d_0 |= comb_bit(b, 1, 0, ii);
	u32 s_0 = comb_bit(b, 0, 0, ii);

	if (constant_time) {
		ec_zero(p1);
		for (int ii = 0; ii < 128; ++ii) {
			// Generate a mask that is -1 if ii == index, else 0
			const u128 mask = ec_gen_mask(ii, d_0);

			// Add in the masked table entry
			ec_xor_mask_affine(GEN_TABLE_0[ii], mask, p1);
		}
		fe_mul(p1.x, p1.y, p1.t);
	} else {
		ec_expand(GEN_TABLE_0[d_0], p1);
	}
	ec_cond_neg(s_0 ^ 1, p1);

	u32 d_1 = comb_bit(b, 7, 1, ii) << 6;
	d_1 |= comb_bit(b, 6, 1, ii) << 5;
	d_1 |= comb_bit(b, 5, 1, ii) << 4;
	d_1 |= comb_bit(b, 4, 1, ii) << 3;
	d_1 |= comb_bit(b, 3, 1, ii) << 2;
	d_1 |= comb_bit(b, 2, 1, ii) << 1;
	d_1 |= comb_bit(b, 1, 1, ii);
	u32 s_1 = comb_bit(b, 0, 1, ii);

	if (constant_time) {
		ec_zero(p2);
		for (int ii = 0; ii < 128; ++ii) {
			// Generate a mask that is -1 if ii == index, else 0
			const u128 mask = ec_gen_mask(ii, d_1);

			// Add in the masked table entry
			ec_xor_mask_affine(GEN_TABLE_1[ii], mask, p2);
		}
		fe_mul(p2.x, p2.y, p2.t);
	} else {
		ec_expand(GEN_TABLE_1[d_1], p2);
	}
	ec_cond_neg(s_1 ^ 1, p2);
}

void ec_mul_gen(const u64 k[4], const bool constant_time, ecpt_affine &R) {
	const int t = 252;
	const int w = 8;
	const int v = 2;
	const int e = 16; // t / wv
	const int d = 32; // ev
	const int l = 256; // dw

	// Recode scalar
	u64 kp[4];
	u32 recode_lsb = ec_recode_scalar_comb(k, kp);

	// Initialize working point
	ufe t2b;
	ecpt X, S, T;

	ec_table_select_comb(kp, e - 1, constant_time, S, T);
	fe_set_smallk(1, S.z);
	ec_add(S, T, X, true, true, false, t2b);

	for (int ii = e - 2; ii >= 0; --ii) {
		ec_table_select_comb(kp, ii, constant_time, S, T);

		ec_dbl(X, X, false, t2b);
		ec_add(X, S, X, true, false, false, t2b);
		ec_add(X, T, X, true, false, false, t2b);
	}

	// If recode_lsb == 1, X = -X
	ec_cond_neg(recode_lsb, X);

	// Compute affine coordinates in R
	ec_affine(X, R);
}


//// Constant-time Simultaneous Multiplication

/*
 * Precomputed table generation
 *
 * Using GLV-SAC Precomputation with m=4 [1], assuming window size of 1 bit
 */

static void ec_gen_table_4(const ecpt &a, const ecpt &b, const ecpt &c, const ecpt &d, ecpt TABLE[8]) {
	// P[0] = a
	ec_set(a, TABLE[0]);

	// P[1] = a + b
	ufe t2b;
	ec_add(a, b, TABLE[1], true, true, true, t2b);

	// P[2] = a + c
	ec_add(a, c, TABLE[2], true, true, true, t2b);

	// P[3] = a + b + c
	ec_add(TABLE[1], c, TABLE[3], true, true, true, t2b);

	// P[4] = a + d
	ec_add(a, d, TABLE[4], true, true, true, t2b);

	// P[5] = a + b + d
	ec_add(TABLE[1], d, TABLE[5], true, true, true, t2b);

	// P[6] = a + c + d
	ec_add(TABLE[2], d, TABLE[6], true, true, true, t2b);

	// P[7] = a + b + c + d
	ec_add(TABLE[3], d, TABLE[7], true, true, true, t2b);
}

/*
 * Constant-time table selection for m=4
 */

static CAT_INLINE void ec_table_select_4(const ecpt *table, const ufp &a, const ufp &b, const ufp &c, const ufp &d, const int index, ecpt &r) {
	int k = ((u32)(b.w >> index) & 1);
	k |= ((u32)(c.w >> index) & 1) << 1;
	k |= ((u32)(d.w >> index) & 1) << 2;

	ec_zero(r);

	const int TABLE_SIZE = 8;
	for (int ii = 0; ii < TABLE_SIZE; ++ii) {
		// Generate a mask that is -1 if ii == index, else 0
		const u128 mask = ec_gen_mask(ii, k);

		// Add in the masked table entry
		ec_xor_mask(table[ii], mask, r);
	}

	ec_cond_neg(((a.w >> index) & 1) ^ 1, r);
}

/*
 * Simultaneous multiplication by two variable base points
 *
 * Preconditions:
 * 	0 < a,b < q
 *
 * Multiplies the result of aP + bQ by 4 and stores it in R
 */

// R = a*4*P + b*4*Q
void ec_simul(const u64 a[4], const ecpt_affine &P, const u64 b[4], const ecpt_affine &Q, ecpt_affine &R) {
	// Decompose scalar into subscalars
	ufp a0, a1, b0, b1;
	s32 a0sign, a1sign, b0sign, b1sign;
	gls_decompose(a, a0sign, a0, a1sign, a1);
	gls_decompose(b, b0sign, b0, b1sign, b1);

	// P1, Q1 = endomorphism points
	ecpt_affine P1a, Q1a;
	gls_morph(P.x, P.y, P1a.x, P1a.y);
	gls_morph(Q.x, Q.y, Q1a.x, Q1a.y);

	// Expand base points
	ecpt P0, Q0, P1, Q1;
	ec_expand(P1a, P1);
	ec_expand(Q1a, Q1);
	ec_expand(P, P0);
	ec_expand(Q, Q0);

	// Set base point signs
	ec_cond_neg(a0sign, P0);
	ec_cond_neg(b0sign, Q0);
	ec_cond_neg(a1sign, P1);
	ec_cond_neg(b1sign, Q1);

	// Precompute multiplication table
	ecpt table[8];
	ec_gen_table_4(P0, P1, Q0, Q1, table);

	// Recode scalar
	u32 recode_bit = ec_recode_scalars_4(a0, a1, b0, b1, 127);

	// Initialize working point
	ecpt X;
	ec_table_select_4(table, a0, a1, b0, b1, 126, X);

	ufe t2b;
	for (int ii = 125; ii >= 0; --ii) {
		ecpt T;
		ec_table_select_4(table, a0, a1, b0, b1, ii, T);

		ec_dbl(X, X, false, t2b);
		ec_add(X, T, X, false, false, false, t2b);
	}

	// If bit == 1, X <- X + P (inverted logic from [1])
	ec_cond_add(recode_bit, X, P0, X, true, false, t2b);

	// Multiply by 4 to avoid small subgroup attack
	ec_dbl(X, X, false, t2b);
	ec_dbl(X, X, false, t2b);

	// Compute affine coordinates in R
	ec_affine(X, R);
}

